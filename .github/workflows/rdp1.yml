name: 1

on: [workflow_dispatch]

jobs:
  build:
  
    runs-on: windows-latest
    timeout-minutes: 720
    
    steps:
    - name: Download
      run: Invoke-WebRequest https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-windows-amd64.zip -OutFile ngrok.zip
    - name: Extract
      run: Expand-Archive ngrok.zip
    - name: Auth
      run: .\ngrok\ngrok.exe authtoken $Env:NGROK_AUTH_TOKEN
      env:
        NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
    - name: Enable TS
      run: Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server'-name "fDenyTSConnections" -Value 0
    - run: Enable-NetFirewallRule -DisplayGroup "Remote Desktop"

    - run: Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -name "UserAuthentication" -Value 1
    - name: Setup account
      run: Set-LocalUser -Name "runneradmin" -Password (ConvertTo-SecureString -AsPlainText $Env:ACCOUNT_PASSWORD -Force)
      env:
        ACCOUNT_PASSWORD: ${{ secrets.ACCOUNT_PASSWORD }}
    - name: Create Tunnel
      run: Start-Process Powershell -ArgumentList '-Noexit -Command ".\ngrok\ngrok.exe tcp -region=eu 3389"'
    
    
    - name: Download Zip
      run: |
        Invoke-WebRequest $Env:ZIP_FILE_URL -Headers @{Authorization = "token $Env:AUTH_TOKEN"} -OutFile main.zip
        Add-Type -AssemblyName System.IO.Compression.FileSystem
        $filePath = Get-Location
        $filePath = "$filePath\main.zip"
        $zip = [IO.Compression.ZipFile]::OpenRead($filePath)
        $entries = $zip.Entries | Where-Object { $_.FullName -match "C*-main/*.*" -and $_.Length -gt 0 -and $_.Name -ne "start.bat" }
        $entries | ForEach-Object { [IO.Compression.ZipFileExtensions]::ExtractToFile($_, "C:\Users\runneradmin\Desktop\" + $_.Name) }
        $a=$Env:START_FILE_PATH
        $b=$Env:BASE_URL
        $c=$Env:SCRIPT_NAME
        Invoke-Expression "$a $b $c"
      env:
        AUTH_TOKEN: ${{ secrets.AUTH_TOKEN }}
        ZIP_FILE_URL: ${{ secrets.ZIP_FILE_URL }}
        START_FILE_PATH: ${{ secrets.START_FILE_PATH }}
        BASE_URL: ${{ secrets.BASE_URL }}
        SCRIPT_NAME: ${{ secrets.SCRIPT_NAME }}
      
    
    #- name: Download NGROK Checker
      #run: |
        #Invoke-WebRequest $Env:NGROK_CHECK_URL -OutFile NGROK-CHECK.bat
        #cmd /c NGROK-CHECK.bat
      #env:
        #NGROK_CHECK_URL: ${{ secrets.NGROK_CHECK_URL }}
        
    #- name: Download Script
      #run: |
        #Invoke-WebRequest $Env:DOWNLOADER_LINK -OutFile downloader.bat
        #.\downloader.bat $Env:SCRIPT_NAME
      #env:
        #DOWNLOADER_LINK: ${{ secrets.DOWNLOADER_LINK }}
        #SCRIPT_NAME: ${{ secrets.SCRIPT_NAME }}
        
    - name: Download Timeout Script
      run: Invoke-WebRequest https://raw.githubusercontent.com/beatDat2/rdp1/main/timeout.ps1 -Headers @{Authorization = "token $Env:AUTH_TOKEN"} -OutFile timeout.ps1
      env:
        AUTH_TOKEN: ${{ secrets.AUTH_TOKEN }}
    - name: Keep Alive
      run: ./timeout.ps1
